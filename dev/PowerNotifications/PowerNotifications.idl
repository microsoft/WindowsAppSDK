// Copyright (c) Microsoft Corporation and Contributors.
// Licensed under the MIT License.

namespace Microsoft.Windows.System.Power
{
    [contractversion(2)]
    apicontract PowerNotificationsContract{};

    // Enums duplicated from IPowerManagerStatics
    [contract(PowerNotificationsContract, 1)]
    enum EnergySaverStatus
    {
        Uninitialized = 0,
        Disabled,
        Off,
        On
    };

    [contract(PowerNotificationsContract, 1)]
    enum BatteryStatus
    {
        NotPresent = 0,
        Discharging,
        Idle,
        Charging
    };

    [contract(PowerNotificationsContract, 1)]
    enum PowerSupplyStatus
    {
        NotPresent = 0,
        Inadequate,
        Adequate
    };

    // Enums based on on PowerSettingRegisterNotification's state
    [contract(PowerNotificationsContract, 1)]
    enum PowerSourceKind
    {
        AC = 0,
        DC
    };

    [contract(PowerNotificationsContract, 1)]
    enum DisplayStatus
    {
        Off = 0,
        On,
        Dimmed
    };

    [contract(PowerNotificationsContract, 1)]
    enum EffectivePowerMode
    {
        // EFFECTIVE_POWER_MODE_V1 values
        BatterySaver,
        BetterBattery,
        Balanced,
        HighPerformance,
        MaxPerformance,
        // EFFECTIVE_POWER_MODE_V2 additional values
        GameMode,
        MixedReality
    };

    [contract(PowerNotificationsContract, 1)]
    enum UserPresenceStatus
    {
        Present = 0,
        Absent
    };

    [contract(PowerNotificationsContract, 1)]
    enum SystemSuspendStatus
    {
        Uninitialized = 0,
        Entering,
        AutoResume,
        ManualResume
    };

    [contract(PowerNotificationsContract, 1)]
    static runtimeclass PowerManager
    {
        // Properties and events duplicated from IPowerManagerStatics.
        static EnergySaverStatus EnergySaverStatus{ get; };
        static event Windows.Foundation.EventHandler<Object> EnergySaverStatusChanged;

        static BatteryStatus BatteryStatus{ get; };
        static event Windows.Foundation.EventHandler<Object> BatteryStatusChanged;

        static PowerSupplyStatus PowerSupplyStatus{ get; };
        static event Windows.Foundation.EventHandler<Object> PowerSupplyStatusChanged;

        static Int32 RemainingChargePercent{ get; };
        static event Windows.Foundation.EventHandler<Object> RemainingChargePercentChanged;

        static Windows.Foundation.TimeSpan RemainingDischargeTime{ get; };
        static event Windows.Foundation.EventHandler<Object> RemainingDischargeTimeChanged;

        // Properties and events based on PowerSettingRegisterNotification's state
        static PowerSourceKind PowerSourceKind{ get; };
        static event Windows.Foundation.EventHandler<Object> PowerSourceKindChanged;

        static DisplayStatus DisplayStatus{ get; };
        static event Windows.Foundation.EventHandler<Object> DisplayStatusChanged;

        static event Windows.Foundation.EventHandler<Object> SystemIdleStatusChanged;

        static event Windows.Foundation.EventHandler<Object> EffectivePowerModeChanged;

        [contract(PowerNotificationsContract, 2)]
        {
            static EffectivePowerMode EffectivePowerMode2{ get; };
        }

        static UserPresenceStatus UserPresenceStatus{ get; };
        static event Windows.Foundation.EventHandler<Object> UserPresenceStatusChanged;

        static SystemSuspendStatus SystemSuspendStatus{ get; };
        static event Windows.Foundation.EventHandler<Object> SystemSuspendStatusChanged;
    };
}
