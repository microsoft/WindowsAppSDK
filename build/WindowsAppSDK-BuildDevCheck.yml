name: $(BuildDefinitionName)_$(date:yyMM).$(date:dd)$(rev:rrr)

parameters:
- name: "PushPackageToInternalFeed"
  type: boolean
  default: true

variables:
- template: ${{variables['System.DefaultWorkingDirectory']}}\build\WindowsAppSDK-Versions.yml
- template: ${{variables['System.DefaultWorkingDirectory']}}\build\WindowsAppSDK-CommonVariables.yml

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/Microsoft.NonOfficial.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    platform:
      name: 'windows_undocked' # windows undocked
    featureFlags:
      WindowsHostVersion:
        Network: R1

    stages:
    - stage: PackageDevCheck
      dependsOn: []
      jobs:
      - job: PackageDevCheck
        pool:
          # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs
          type: windows
        variables:
          ob_outputDirectory: '$(Build.ArtifactStagingDirectory)\NuGet'
        steps:
        - task: PowerShell@2
          displayName: Update version
          inputs:
            targetType: 'inline'
            script: |
              Write-Host version: '$(version)'
              [xml]$publicNuspec = Get-Content -Encoding utf8 -Path $(Build.SourcesDirectory)\tools\DevCheck\nuspec\Microsoft.WindowsAppSDK.DevCheck.nuspec
              $publicNuspec.package.metadata.version = '$(version)'
              Set-Content -Encoding utf8 -Value $publicNuspec.OuterXml $(Build.SourcesDirectory)\tools\DevCheck\nuspec\Microsoft.WindowsAppSDK.DevCheck.nuspec

        - task: CopyFiles@2
          displayName: 'Add DevCheck.ps1 to Nuget'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)\tools\DevCheck'
            Contents: |
              DevCheck.ps1
            TargetFolder: '$(Build.SourcesDirectory)\PackLocation'
            flattenFolders: false

        - task: CopyFiles@2
          displayName: 'Add License.txt to Nuget'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)'
            Contents: |
              LICENSE
            TargetFolder: '$(Build.SourcesDirectory)\PackLocation'
            flattenFolders: false

        - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
          displayName: 'Pack DevCheckPackage'
          inputs:
            command: 'pack'
            packagesToPack: '$(Build.SourcesDirectory)\tools\DevCheck\nuspec\Microsoft.WindowsAppSDK.DevCheck.nuspec'
            versioningScheme: off
            basePath: '$(Build.SourcesDirectory)\PackLocation'
            packDestination: '$(ob_outputDirectory)'

        - ${{ if eq(parameters.PushPackageToInternalFeed, 'true') }}:
          - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
            displayName: 'NuGet push package to Project.Reunion.nuget.internal'
            inputs:
              command: 'push'
              packagesToPush: '$(ob_outputDirectory)\Microsoft.WinAppSDK.DevCheck.*.nupkg'
              verbosityPush: 'Detailed'
              nuGetFeedType: 'internal'
              # ignore conflicts which come from rerunning with the same input packages
              allowPackageConflicts: true
              #Note: The project qualifier is always required when using a feed name. Also, do not use organization scoped feeds.
              publishVstsFeed: 'ProjectReunion/Project.Reunion.nuget.internal'
