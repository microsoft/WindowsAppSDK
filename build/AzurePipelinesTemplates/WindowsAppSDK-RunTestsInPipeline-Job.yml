# This runs the integration tests directly in the pipeline on the images hosted by the 'WinAppSDK-Test-Pool'.
# This pool is a 1ES Hosted Pool with custom images, which lets us run tests on builds beyond what is
# supported by Helix or the Azure DevOps Microsoft hosted agents.

parameters:
- name: jobName
  type: string
  default: PipelineTests
- name: dependsOn
  type: object
  default:
  - ''
  # testMatrix is supplied by WindowsAppSDKConfig/WindowsAppSDK-Foundation-TestConfig.yml
- name: testMatrix
  type: object
  default: ''
- name: buildPlatform
  type: string
  default: x64

jobs:
- job: FilterMatrix
  steps:
  - powershell: |
      Write-Host "This is ${{ convertToJson(parameters.testMatrix) }}"       // This is 
      $testMatrix = "${{ parameters.testMatrix }}" | ConvertFrom-Json
      $targetPlatform = "${{ parameters.buildPlatform }}"
      Write-Host "That is ${{ parameters.buildPlatform }}"    // That is x86
      $filteredMatrix = @{}
      foreach ($entry in $testMatrix.PSObject.Properties) {
        if ($entry.Value.buildPlatform -eq $targetPlatform) {
            $filteredMatrix[$entry.Name] = $entry.Value
        }
      }
      $filteredMatrixJson = $filteredMatrix | ConvertTo-Json -Compress
      Write-Host "##vso[task.setvariable variable=filteredMatrixJson;isOutput=true]$filteredMatrixJson"
    name: setFilteredMatrixStep
  - script: echo $(setFilteredMatrixStep.filteredMatrixJson)
    name: echoMatrix

# - job: ${{ parameters.jobName }}
#   dependsOn: FilterMatrix
#   strategy:
#     matrix: $[ dependencies.FilterMatrix.outputs['setFilteredMatrixStep.filteredMatrixJson'] ]
#   pool:
#     type: windows
#     isCustom: true
#     name: $(poolName)
#     demands: ImageOverride -equals $(imageName)
#   timeoutInMinutes: 120
#   variables:
#     testPayloadArtifactDir: $(Build.SourcesDirectory)\BuildOutput\$(buildConfiguration)\$(buildPlatform)
#     AZURE_PIPELINES_DEDUP_PARALLELISM: 16
#   steps:
#     - template: WindowsAppSDK-RunTests-Steps.yml
#       parameters:
#         buildPlatform: $(buildPlatform)
#         buildConfiguration: $(buildConfiguration)
#         testLocale: $(testLocale)
#         ImageName: $(imageName)