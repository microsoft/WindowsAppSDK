# This runs the integration tests directly in the pipeline on the images hosted by the 'WinAppSDK-Test-Pool'.
# This pool is a 1ES Hosted Pool with custom images, which lets us run tests on builds beyond what is
# supported by Helix or the Azure DevOps Microsoft hosted agents.

parameters:
- name: jobName
  type: string
  default: PipelineTests
- name: dependsOn
  type: object
  default:
  - ''
  # testMatrix is supplied by WindowsAppSDKConfig/WindowsAppSDK-Foundation-TestConfig.yml
- name: testMatrix
  type: object
  default: ''
- name: buildPlatform
  type: string
  default: x64

jobs:
- job: ExtractMatrix
  pool:
    type: windows
    isCustom: true
    name: 'ProjectReunionESPool-2022'
  steps:
  - powershell: |
      $testMatrix = "${{ parameters.testMatrix }}" | ConvertFrom-Json
      $targetPlatform = "${{ parameters.buildPlatform }}"
      $filteredMatrix = @{}
      foreach ($entry in $testMatrix.PSObject.Properties) {
        if ($entry.Value.buildPlatform -eq $targetPlatform) {
            $filteredMatrix[$entry.Name] = $entry.Value
        }
      }
      $matrixJson = $filteredMatrix | ConvertTo-Json -Compress
      Write-Host "##vso[task.setvariable variable=matrixJson;isOutput=true]$matrixJson"
    name: filterByPlatformStep
    displayName: "Extract matrix as json value filtering by build platform and pass the extracted matrix to next job"
  - script: echo $(filterByPlatformStep.matrixJson)
    name: echoMatrix
    displayName: "Echo filtered matrix"


- job: ${{ parameters.jobName }}
  dependsOn: ExtractMatrix
  strategy:
    matrix: $[ dependencies.ExtractMatrix.outputs['filterByPlatformStep.matrixJson'] ]
  pool:
    type: windows
    isCustom: true
    name: $(poolName)
    demands: ImageOverride -equals $(imageName)
  timeoutInMinutes: 120
  variables:
    testPayloadArtifactDir: $(Build.SourcesDirectory)\BuildOutput\$(buildConfiguration)\$(buildPlatform)
    AZURE_PIPELINES_DEDUP_PARALLELISM: 16
    artifactAttempt: ''
    ob_artifactSuffix: '_${{ variables.buildConfiguration }}${{ variables.buildPlatform }}_$(Agent.JobStatus)$(artifactAttempt)'
    ob_artifactBaseName: '$(System.StageName)_${{ variables.imageName }}'
  steps:
    - template: WindowsAppSDK-RunTests-Steps.yml
      parameters:
        buildPlatform: $(buildPlatform)
        buildConfiguration: $(buildConfiguration)
        testLocale: $(testLocale)
