parameters:
  - name: "IsOneBranch"
    type: boolean
    default: true
  - name: TestSampleAppsAfterBuildStage
    displayName: "Test launch of Sample apps separately in the TestSampleApps Stage"
    type: boolean
    default: true
  - name: TestOnArm64
    type: boolean
    default: true
  - name: SamplesBuildOutputArtifactName
    displayName: "Base name for Samples build output artifacts"
    type: string
    default: 'SamplesBuildOutput'
  - name: runStaticAnalysis
    type: boolean
    default: true
  - name: maxParallel_x64
    type: number
    default: 10
  - name: maxParallel_arm64
    type: number
    default: 10
  # Each featureArea listed below is being built by a separate job agent, producing one corresponding test artifact.
  # Because large artifacts (e.g., 5+GB) seems to hit "Out of Memory" error more frequently during artifact download, we sometimes
  # split one featureArea artifact into smaller artifacts, usually <featureArea-A>-cs to group C# sample apps into one artifact,
  # and <featureArea-A>-cpp to group C++ sample apps into another artifact. When a *-cs artifact is still too big, we then
  # split it further using the pattern *-cs,  *-cs1, *-cs2, etc.
  # As soon as large artifacts are no longer hitting the "Out of Memory" error during download, we can recombine all
  # <featureArea-A>-* artifacts into a single large <featureArea-A> artifact.
  # See the comment block below where these groups are being used.
  - name: "sampleFeatureAreasList"
    type: object
    default:
      # These featureAreas are currently being built for [x64 | arm64] x [Release | Debug].
      # WindowsAppSDK-BuildSamplesCompat-Job.yml uses these feature area names in both file paths and artifact names.
      # But '\' is invalid in artifact names. Therefore, using '-' in instead of '\' here, and convert '-' to '\' when
      # we need to use the feature name in file paths later. For instance:
      # We use "AppLifecycle-EnvironmentVariables" to construct file path "<SamplesRepoName>\Samples\AppLifecycle\EnvironmentVariables\<sample app folder>".
      # If there is a '-' in the directory name, such as "WindowsAIFoundry\cs-winui", the hyphen can be escaped
      # by doubling it up as "--".
      SamplesCompatTest:
      - 'Installer'
      - 'Unpackaged'
      # - 'Notifications-Push'
      # - 'Insights'
      # - 'AppLifecycle-Activation-cpp-cpp--console--unpackaged'
      # - 'AppLifecycle-Activation-cpp-cpp--win32--unpackaged'
      # - 'AppLifecycle-Activation-cs'
      # - 'AppLifecycle-Instancing-cpp-cpp--console--unpackaged'
      # - 'AppLifecycle-Instancing-cpp-cpp--win32--packaged'
      # - 'AppLifecycle-Instancing-cpp-cpp--win32--unpackaged'
      # - 'AppLifecycle-Instancing-cs'
      # - 'AppLifecycle-Instancing-cs1'
      # - 'AppLifecycle-StateNotifications-cpp-cpp--console--unpackaged'
      # - 'AppLifecycle-StateNotifications-cpp-cpp--win32--packaged'
      # - 'AppLifecycle-StateNotifications-cpp-cpp--win32--unpackaged'
      # - 'AppLifecycle-StateNotifications-cs'
      # - 'AppLifecycle-StateNotifications-cs1'
      # - 'AppLifecycle-EnvironmentVariables'
      # - 'AppLifecycle-Restart-cpp--console--unpackaged'
      # - 'ResourceManagement-cpp-cpp--console--unpackaged'
      # - 'ResourceManagement-cs-cs--winforms--unpackaged'
      # - 'ResourceManagement-cs1'
      # - 'Mica-cpp--win32'
      # - 'Windowing-cpp-cpp--win32'
      # - 'Windowing-cs-cs--winforms--unpackaged'
      # - 'SelfContainedDeployment-cpp-cpp--console--unpackaged'
      # - 'SelfContainedDeployment-cs'

stages:
- stage: BuildSampleApps_x64
  dependsOn: []
  variables:
    SamplesRepoName: 'WindowsAppSDK-Samples'
    SelfRepoName: 'WindowsAppSDK'
  jobs:
  - template: WindowsAppSDK-BuildSamplesCompat-Job.yml
    parameters:
      IsOneBranch: ${{ parameters.IsOneBranch }}
      JobName: "SamplesCompatTest"
      FeatureAreas: ${{ parameters.sampleFeatureAreasList.SamplesCompatTest }}
      BuildConfig:
      - 'Release'
      - 'Debug'
      BuildPlatform:
      - 'x64'
      # Specify a valid sample artifact name to trigger publishing if we will run SampleTests in any stage; otherwise,
      # specify an invalid artifact name to skip publishing.
      # ${{ if or(eq(parameters.TestSampleAppsAfterBuildStage, 'true'), eq(parameters.TestSampleAppsInPipelineTestStage, 'true')) }}:
      ${{ if or(eq(parameters.TestSampleAppsAfterBuildStage, 'true'), false) }}:
        SamplesArtifactName: ${{ parameters.SamplesBuildOutputArtifactName }}_x64
      # ${{ if and(ne(parameters.TestSampleAppsAfterBuildStage, 'true'), ne(parameters.TestSampleAppsInPipelineTestStage, 'true')) }}:
      ${{ if and(ne(parameters.TestSampleAppsAfterBuildStage, 'true'), true) }}:
        SamplesArtifactName: ''
      runStaticAnalysis : ${{ parameters.runStaticAnalysis }}
      maxParallel: ${{ parameters.maxParallel_x64 }}

- stage: BuildSampleApps_arm64
  dependsOn: []
  variables:
    SamplesRepoName: 'WindowsAppSDK-Samples'
    SelfRepoName: 'WindowsAppSDK'
  jobs:
  - template: WindowsAppSDK-BuildSamplesCompat-Job.yml
    parameters:
      IsOneBranch: ${{ parameters.IsOneBranch }}
      JobName: "SamplesCompatTest"
      FeatureAreas: ${{ parameters.sampleFeatureAreasList.SamplesCompatTest }}
      BuildConfig:
      - 'Release'
      - 'Debug'
      BuildPlatform:
      - 'arm64'
      # Specify a valid sample artifact name to trigger publishing if we will run SampleTests in any stage; otherwise,
      # specify an invalid artifact name to skip publishing.
      # ${{ if or(eq(parameters.TestSampleAppsAfterBuildStage, 'true'), eq(parameters.TestSampleAppsInPipelineTestStage, 'true')) }}:
      ${{ if or(eq(parameters.TestSampleAppsAfterBuildStage, 'true'), false) }}:
        SamplesArtifactName: ${{ parameters.SamplesBuildOutputArtifactName }}_arm64
      # ${{ if and(ne(parameters.TestSampleAppsAfterBuildStage, 'true'), ne(parameters.TestSampleAppsInPipelineTestStage, 'true')) }}:
      ${{ if and(ne(parameters.TestSampleAppsAfterBuildStage, 'true'), true) }}:
        SamplesArtifactName: ''
      runStaticAnalysis : ${{ parameters.runStaticAnalysis }}
      maxParallel: ${{ parameters.maxParallel_arm64 }}

- ${{ if eq( parameters.TestSampleAppsAfterBuildStage, true ) }}:
  - stage: TestSampleApps_x64
    dependsOn: []
    variables:
      SamplesRepoName: 'WindowsAppSDK-Samples'
      SelfRepoName: 'WindowsAppSDK'
    jobs:
    - template: WindowsAppSDK-RunTestsInPipeline-Job.yml
      parameters:
        jobName: TestSamplesX64
        samplesArtifactName: ${{ parameters.SamplesBuildOutputArtifactName }}_x64
        callingStage: 'TestSampleApps'
        sampleFeatureAreasList: ${{ parameters.sampleFeatureAreasList }}
        IsOneBranch: ${{ parameters.IsOneBranch }}
        TestMatrix: $[ variables.SampleAppsTests ]

  - ${{ if eq(parameters.TestOnArm64, true)}}:
    - stage: TestSampleApps_arm64
      dependsOn: []
      variables:
        SamplesRepoName: 'WindowsAppSDK-Samples'
        SelfRepoName: 'WindowsAppSDK'
      jobs:
      - template: WindowsAppSDK-RunTestsInPipeline-Job.yml
        parameters:
          jobName: TestSamplesArm64
          samplesArtifactName: ${{ parameters.SamplesBuildOutputArtifactName }}_arm64
          callingStage: 'TestSampleApps'
          sampleFeatureAreasList: ${{ parameters.sampleFeatureAreasList }}
          IsOneBranch: ${{ parameters.IsOneBranch }}
          TestMatrix: $[ variables.SampleAppsTests ]