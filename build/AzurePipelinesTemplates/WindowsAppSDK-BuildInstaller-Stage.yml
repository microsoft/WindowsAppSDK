# This Installer Stage is purely for validation
# The actual installer is built with the Aggregator build
stages:
- stage: Installer
  dependsOn: []
  jobs:
  - job: BuildInstaller
    dependsOn: []
    pool:
      type: windows
      isCustom: true
      name: 'ProjectReunionESPool-2022' # This stage is purely for validation
    strategy:
      maxParallel: 10
      matrix:
        Release_x86:
          buildPlatform: 'x86'
          buildConfiguration: 'Release'
        Release_x64:
          buildPlatform: 'x64'
          buildConfiguration: 'Release'
        Release_arm64:
          buildPlatform: 'arm64'
          buildConfiguration: 'Release'
    variables:
      - name: ob_outputDirectory
        value: '$(REPOROOT)\out'
      - name: ob_artifactSuffix
        value: '_$(buildConfiguration)_$(buildPlatform)'
      - name: ob_artifactBaseName
        value: "Installer$(ob_artifactSuffix)"
      # foundationRepoPath should be empty because we are not doing multiple checkouts hence
      # it is not under $(Build.SourcesDirectory)\WindowsAppSDK
      - name: foundationRepoPath
        value: ""
      - template: AzurePipelinesTemplates/WindowsAppSDK-Global-LKGVersions.yml@WindowsAppSDKVersionConfig
      - name: localCompilerOverridePackageName
        value: $[coalesce(variables.compilerOverridePackageName, variables.global_CompilerOverridePackageName)]
      - name: localCompilerOverridePackageVersion
        value: $[coalesce(variables.compilerOverridePackageVersion, variables.global_CompilerOverridePackageVersion)]
      - name: localCompilerOverrideNupkgVersion
        value: $[coalesce(variables.compilerOverrideNupkgVersion, variables.global_CompilerOverrideNupkgVersion)]
      - name: ob_sdl_checkCompliantCompilerWarnings
        value: true
      - name: ob_sdl_prefast_runDuring
        value: 'Build'
      - name: ob_sdl_msbuildOverride
        value: true
    condition: ne(variables.LatestOfficialBuildID, '')
    steps:
    - script: |
        echo Build.SourceBranch=$(Build.SourceBranch)
        echo Build.Reason=$(Build.Reason)
        echo compilerOverridePackageName=$(compilerOverridePackageName)
        echo compilerOverridePackageVersion=$(compilerOverridePackageVersion)
        echo global_CompilerOverridePackageName=$(global_CompilerOverridePackageName)
        echo global_CompilerOverridePackageVersion=$(global_CompilerOverridePackageVersion)
        echo localCompilerOverridePackageName=$(localCompilerOverridePackageName)
        echo localCompilerOverridePackageVersion=$(localCompilerOverridePackageVersion)
        echo localCompilerOverrideNupkgVersion=$(localCompilerOverrideNupkgVersion)
        echo System.PullRequest.targetBranchName=$(System.PullRequest.targetBranchName)
        echo ob_sdl_checkCompliantCompilerWarnings=$(ob_sdl_checkCompliantCompilerWarnings)
        echo ob_sdl_prefast_runDuring=$(ob_sdl_prefast_runDuring)
        echo ob_sdl_msbuildOverride=$(ob_sdl_msbuildOverride)

    # The MMS2022 image used to come with Windows SDK 10.0.26100, but not any more.
    - task: PowerShell@2
      displayName: 'Add Windows SDK 10.0.26100'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
      inputs:
        targetType: filePath
        filePath: $(Build.SourcesDirectory)\build\scripts\windows-sdk.ps1
        # TODO: the SdkVersion parameter does not yet support arbitrary versions.
        arguments: >
          -SdkVersion "10.0.26100"

    - template: WindowsAppSDK-BuildInstaller-Steps.yml@self
